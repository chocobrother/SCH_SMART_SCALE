/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package managescale;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.DataFormat;
import javax.swing.DefaultListModel;
import network.NetworkHandler;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import org.apache.http.ParseException;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
/**
 * @author train
 */
public class SearchFrame extends javax.swing.JFrame {
   
        public static String Start;
        
        public static String End;
        
        Date date1;
        
        Date date2;
        
        Date ConvertStart;
           
        Date ConvertEnd; 
        
        public static int Scompare;
                      
        public static int Ecompare;
                        
        public static int Same;
        
        
    /**
     * Creates new form joinFrame
     */
    public SearchFrame() {
        
        initComponents();
       
        Calendar calendar = Calendar.getInstance();
        Date curDate = (Date)calendar.getTime();
        calendar.add(Calendar.YEAR, -50);
        Date minDate = (Date)calendar.getTime();
        calendar.add(Calendar.YEAR, 100);
        Date maxDate = (Date)calendar.getTime();
        SpinnerDateModel datemodel = new SpinnerDateModel(curDate,minDate,maxDate,Calendar.YEAR);
       
        jSpinner1.setModel(datemodel);
        jSpinner1.setEditor(new JSpinner.DateEditor(jSpinner1,"yyyy년MM월dd일"));
        
        
        SpinnerDateModel datemodel1 = new SpinnerDateModel(curDate,minDate,maxDate,Calendar.YEAR);
        jSpinner2.setModel(datemodel1);
        jSpinner2.setEditor(new JSpinner.DateEditor(jSpinner1,"yyyy년MM월dd일"));
        
        this.addWindowListener(new WindowAdapter(){
            public void windowClosing(WindowEvent e){
             System.out.println("search closing");
             e.getWindow().dispose();
            }         
        });
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTextField1.setEditable(false);
        jTextField1.setBackground(new java.awt.Color(255, 255, 255));
        jTextField1.setFont(new java.awt.Font("굴림", 0, 24)); // NOI18N
        jTextField1.setText("              기록 조회");
        jTextField1.setToolTipText("");

        jTextField2.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        jTextField2.setText("    ~~");
        jTextField2.setMinimumSize(new java.awt.Dimension(33, 28));
        jTextField2.setPreferredSize(new java.awt.Dimension(33, 28));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jList1.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { " ", " ", " ", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setValueIsAdjusting(true);
        jScrollPane1.setViewportView(jList1);

        jButton1.setFont(new java.awt.Font("굴림", 0, 18)); // NOI18N
        jButton1.setText("조 회");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(16, 16, 16)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       String sp1 = jSpinner1.getValue().toString();
         
       System.out.println("sp : " + sp1);
      
       String sp2 = jSpinner2.getValue().toString();
       
        System.out.println("s2p : " + sp2);
       
       SimpleDateFormat f1 = new SimpleDateFormat("EEE MMM dd HH:mm:ss z yyyy",Locale.ENGLISH);
       
       SimpleDateFormat f2 = new SimpleDateFormat("yyyy-MM-dd",Locale.KOREA);      
      
       try{
           
            date1 = f1.parse(sp1);
            date2 = f1.parse(sp2);
           
           Start = f2.format(date1);
           
           End = f2.format(date2);
           
           SimpleDateFormat transFormat = new SimpleDateFormat("yyyy-MM-dd");
           
           ConvertStart = transFormat.parse(Start);
           
           ConvertEnd = transFormat.parse(End);

       }catch(ParseException e){
           e.printStackTrace();
       } catch (java.text.ParseException ex) {
            Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
 
       String result = NetworkHandler.search_check(); 
       
       DefaultListModel listModel = new DefaultListModel(); 
       
       listModel.removeAllElements(); 
        
     
       try{
            JSONObject json = new JSONObject(result);

            JSONArray jArr = json.getJSONArray("wList");
            
            System.out.println("JARRRRRR : " + jArr);
            
            String[] name = {"createDate","bmi","fatPer","fatMass"};

            for(int i = 0; i< jArr.length(); i++){
                json = jArr.getJSONObject(i); 
                   
                String createDate = json.getString("createDate").toString();
                
                String bmi = json.getString("bmi").toString();
                
                String fatPer = json.getString("fatPer").toString();
                
                String fatMass = json.getString("fatMass").toString();
               
                String subdate = createDate.substring(0,10);
                
//                array[i] = date1;
                

                SimpleDateFormat f3 = new SimpleDateFormat("yyyy-MM-dd",Locale.KOREA);      
      
                 try{
           
                      Date ddd = f3.parse(createDate);
                      System.out.println(" cssss : " + ConvertStart + "//////////" + ConvertEnd + " dddd" + ddd );
                     
                       Scompare = ConvertStart.compareTo(ddd);
                        System.out.println("ccccccccccc : " + Scompare);
                       Ecompare = ConvertEnd.compareTo(ddd);
                        System.out.println("ssssssssss: " + Ecompare);
                       Same = ConvertStart.compareTo(ConvertEnd);
                      
                      System.out.println("Start ::" + ConvertStart + "End : " + ConvertEnd + " Subdate : " + ddd);
                      
                     if( Scompare <= 0 && Ecompare >=0 ){
                            System.out.println(" correct");
                           listModel.addElement("Date : " + subdate + " bmi : "+ bmi + " fatPer : "+fatPer + " fatMass : "+fatMass);
                           jList1.setModel(listModel);

                     } else if (Same == 0 && Scompare == 0 && Ecompare == 0){
                          listModel.addElement("Date : " + subdate + " bmi : "+ bmi + " fatPer : "+fatPer + " fatMass : "+fatMass);
                           jList1.setModel(listModel);
                           
                     } else if(Same > 0){
                           
                             JOptionPane.showMessageDialog(null,"날짜를 제대로 입력해주세요.");
                             break;
                     } 
                        
                    }catch(ParseException e){
                        e.printStackTrace();
                    } catch (java.text.ParseException ex) {
                         Logger.getLogger(SearchFrame.class.getName()).log(Level.SEVERE, null, ex);
                     }

            }
 
       }catch(JSONException e){
           e.printStackTrace();

       }
  
    }//GEN-LAST:event_jButton1ActionPerformed
     
    
    
    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed
    
    ////Add Test 부분
    private void addTestBtnActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
        NetworkHandler.dataAdd();
    }          
   
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}
