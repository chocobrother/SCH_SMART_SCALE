/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package uclab.ui;

import com.fazecast.jSerialComm.SerialPort;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.concurrent.BlockingQueue;

import java.util.concurrent.LinkedBlockingQueue;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;
import uclab.common.Constants;
import uclab.algorithms.ECG_Signal;
import uclab.common.LogPrint;

/**
 *
 * @author train
 */
public class MainJFrame extends javax.swing.JFrame {

    private XYSeries series;
    private JFreeChart chart;
    private XYLineAndShapeRenderer renderer;
    private ValueAxis range;
    
    private ECG_Signal ecgSignal;
    private ElapseTimeThread elapseTime;
    private UiupdateThread  uiUpdate;
    private SerialCommunicationThread serialCommunicationl;
             
    private Thread ecgThread, elapseThread, uiThread, serialThread;
    
    private ImageIcon goodSignal, badSignal;
    
    private SerialPort chosenPort;
    private int x = 0;
   
    private BlockingQueue<Integer> bq_ecg;
    private BlockingQueue<Integer> bq_weight;    
    
    enum ButtonState {START, PAUSE, STOP, RESTART};
    ButtonState state;
    
    
//    private JFrame mainJFrame;
//    
    /**
     * Creates new form NewJFrame
     */
    public MainJFrame() {
        initComponents();
        initGraph();               
        
        bq_ecg =  new LinkedBlockingQueue<Integer>(1024);
        bq_weight = new LinkedBlockingQueue<Integer>(100);
        
//        mainJFrame = new MainJFrame();
        chosenPort = SerialPort.getCommPort("COM3");
        chosenPort.setComPortTimeouts(SerialPort.TIMEOUT_SCANNER, 0, 0);
        chosenPort.setBaudRate(115200);               
        
        this.setVisible(true);        
    }

    public void initGraph(){
        series = new XYSeries("");
	
        XYDataset dataset = new XYSeriesCollection(series);

		// XYSeriesCollection dataset = new XYSeriesCollection(series);

        chart = ChartFactory.createXYLineChart("", " ", "Volts", dataset);
	XYPlot plot = chart.getXYPlot();
	renderer = new XYLineAndShapeRenderer(true, false);
		
		//remove axis
	range = plot.getRangeAxis();
//	range.setRange(0.5,3.5);
        range.setRange(0,1000);
	range.setVisible(false);
	ValueAxis domain = plot.getDomainAxis();
	domain.setVisible(false);
		
		//legent remove
	LegendTitle legend = chart.getLegend();
	legend.setVisible(false);
		
	renderer.setSeriesPaint(0, Color.RED);
	renderer.setSeriesStroke(0, new BasicStroke(3.0f));
	plot.setDomainGridlinesVisible(false);
	plot.setRangeGridlinesVisible(false);
	plot.setBackgroundPaint(Color.WHITE);
	
        plot.setRenderer(renderer);
	ValueAxis axis = plot.getDomainAxis();
	axis.setFixedAutoRange(600);                
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        sqiLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        elapseTimeLabel = new javax.swing.JLabel();
        weightLabel = new javax.swing.JLabel();
        heartRateLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        button = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        graphPanel = new javax.swing.JPanel();
        readyLabel = new javax.swing.JLabel();
        afDiagnosisLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1350, 1000));

        titleLabel.setBackground(new java.awt.Color(255, 255, 255));
        titleLabel.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30)); // NOI18N
        try{
            BufferedImage img = ImageIO.read(new File("C:\\Users\\train\\Documents\\NetBeansProjects\\testNetBean\\res\\pc_icon-0.png"));
            Image dimg = img.getScaledInstance(200, 180, Image.SCALE_SMOOTH);
            ImageIcon titleImage = new ImageIcon(dimg);
            titleLabel.setIcon(titleImage);
        }catch(IOException e){

        }
        titleLabel.setText("Smart Scale for Detection Arrhythmia");

        sqiLabel.setFont(new java.awt.Font("굴림", 0, 30)); // NOI18N
        sqiLabel.setIcon(null);
        sqiLabel.setText("Good SIGNAL");
        sqiLabel.hide();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        elapseTimeLabel.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30)); // NOI18N
        elapseTimeLabel.setText("0s");

        weightLabel.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30)); // NOI18N
        weightLabel.setText("0KG");

        heartRateLabel.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30)); // NOI18N
        heartRateLabel.setText("bpm");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        button.setBackground(new java.awt.Color(255, 255, 255));
        button.setContentAreaFilled(false);
        button.setFocusPainted(false);
        button.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30)); // NOI18N
        try{
            BufferedImage img = ImageIO.read(new File("C:\\Users\\train\\Documents\\NetBeansProjects\\testNetBean\\res\\button_1.png"));
            Image dimg = img.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
            ImageIcon startImage = new ImageIcon(dimg);
            button.setIcon(startImage);
        }catch(IOException e){

        }
        button.setBorderPainted(false);
        button.setText(" START");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        jPanel4.setVisible(false);
        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setBorder(null);
        try{
            BufferedImage img = ImageIO.read(new File("C:\\Users\\train\\Documents\\NetBeansProjects\\testNetBean\\res\\pause.png"));
            Image dimg = img.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
            ImageIcon startImage = new ImageIcon(dimg);
            jButton3.setIcon(startImage);
        }catch(IOException e){

        }
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        try{
            BufferedImage img = ImageIO.read(new File("C:\\Users\\train\\Documents\\NetBeansProjects\\testNetBean\\res\\stop.png"));
            Image dimg = img.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
            ImageIcon startImage = new ImageIcon(dimg);
            jButton4.setIcon(startImage);
        }catch(IOException e){

        }
        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 43, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(button, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(elapseTimeLabel)
                        .addComponent(weightLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(heartRateLabel)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(weightLabel)
                .addGap(55, 55, 55)
                .addComponent(heartRateLabel)
                .addGap(55, 55, 55)
                .addComponent(elapseTimeLabel)
                .addContainerGap())
        );

        graphPanel.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
        graphPanel.setLayout(graphPanelLayout);
        graphPanelLayout.setHorizontalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(readyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        graphPanelLayout.setVerticalGroup(
            graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(readyLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        afDiagnosisLabel.setVisible(false);
        afDiagnosisLabel.setFont(new java.awt.Font("210 맨발의청춘 B", 0, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(titleLabel))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(sqiLabel)
                        .addGap(124, 124, 124)
                        .addComponent(afDiagnosisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sqiLabel)
                            .addComponent(afDiagnosisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 81, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1217, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        // TODO add your handling code here:
        //jButton1 -> start
        if(button.getText().equals(" START")){            
            if (chosenPort.openPort()) {                
                state = ButtonState.PAUSE;
                
                button.setVisible(false);
                jPanel4.setVisible(true);
                             
                readyLabel.setVisible(false);
                sqiLabel.setVisible(true);
                afDiagnosisLabel.setVisible(true);
//                graphPanel.add(new ChartPanel(chart));

                afDiagnosisLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\train\\Documents\\NetBeansProjects\\testNetBean\\res\\loading_image2.gif")); // NOI18N

                 ecgSignal = new ECG_Signal(heartRateLabel, sqiLabel); //heartrate, sqi
               
                 
                uiUpdate = new UiupdateThread(this, series, range, sqiLabel, weightLabel, renderer, ecgSignal, bq_ecg, bq_weight);
                uiThread = new Thread(uiUpdate);    
                
                elapseTime = new ElapseTimeThread(ecgSignal, elapseTimeLabel, button, afDiagnosisLabel, chosenPort, uiUpdate); //elapseTIme, afdetection

                ecgThread = new Thread(ecgSignal);
                elapseThread = new Thread(elapseTime);       

                serialCommunicationl = new SerialCommunicationThread(chosenPort, bq_ecg, bq_weight);
                serialThread = new Thread(serialCommunicationl);                       
        
                //체중 달라는 패킷 전송
                OutputStream outputStream = chosenPort.getOutputStream();                 
                
                try {
                    //weight req packet 응답패킷을 받을 때까지 패킷을 전송함
                    while(!SerialCommunicationThread.getResponsePacket()){
                        
                        try {                            
                            Thread.sleep(5);
                        } catch (InterruptedException e) {
                          // TODO Auto-generated catch block
                          e.printStackTrace();
                        }
                        
                        outputStream.write(70);
                        
                        LogPrint.println("MainJFrame","체중 요청 패킷 전송");
                    }
                        LogPrint.println("MainJFrame","체중 요청에 대한 응답 패킷 받음");
                } catch (IOException ex) {
                    Logger.getLogger(MainJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }               
                afDiagnosisLabel.setText("체중 측정 중...");
                    
                ecgThread.start();
                elapseThread.start();
                serialThread.start();
                uiThread.start();   
                                
                ChartPanel cp= new ChartPanel(chart);                                                       
                
                javax.swing.GroupLayout graphPanelLayout = new javax.swing.GroupLayout(graphPanel);
                graphPanel.setLayout(graphPanelLayout);
                graphPanelLayout.setHorizontalGroup(
                    graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                    .addContainerGap(85, Short.MAX_VALUE)
                    .addComponent(cp, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
                );
                graphPanelLayout.setVerticalGroup(
                    graphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, graphPanelLayout.createSequentialGroup()
                    .addContainerGap(74, Short.MAX_VALUE)
                    .addComponent(cp, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
                );                                        
            }
        }
    }//GEN-LAST:event_buttonActionPerformed

    //pause button
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(state == ButtonState.PAUSE){            
            if(!serialCommunicationl.getThreadWaitState()){
                state = ButtonState.RESTART;
                //wait함
                serialCommunicationl.setThreadWaitState(true);
                elapseTime.setWaitFlag(true);
            }
        }else if(state == ButtonState.RESTART){       
            state = ButtonState.PAUSE;
            serialCommunicationl.setThreadWaitState(false);            
            serialCommunicationl.threadNotify();           
            
            elapseTime.setWaitFlag(false);
            elapseTime.threadNotify();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //stop
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:       
        state = ButtonState.STOP;

           jPanel4.setVisible(false);
           button.setVisible(true);
           
           readyLabel.setVisible(true);
           sqiLabel.setVisible(false);
           afDiagnosisLabel.setVisible(false);
           
           uiUpdate.threadStop();
           ecgSignal.threadStop();
           serialCommunicationl.threadStop();
           elapseTime.threadStop();
           
           chosenPort.closePort();    
           
           series.clear();           
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
                      System.out.println("dddd0");
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                JFrame mainjFrame = new MainJFrame();
//                mainJFrame.setVisible(true);   
            }
        });       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel afDiagnosisLabel;
    private javax.swing.JButton button;
    private javax.swing.JLabel elapseTimeLabel;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JLabel heartRateLabel;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel readyLabel;
    private javax.swing.JLabel sqiLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel weightLabel;
    // End of variables declaration//GEN-END:variables
}
